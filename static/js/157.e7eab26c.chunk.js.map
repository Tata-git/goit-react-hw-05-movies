{"version":3,"file":"static/js/157.e7eab26c.chunk.js","mappings":"mPA+BA,EA7Ba,WACX,IAAMA,ECCoB,WAC1B,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOD,EAAP,KAAoBE,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVEE,EAAAA,EAAAA,YAAU,YAEVC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAC3BC,QAAQC,IAAI,OAAQF,GACpBN,EAAeM,EAChB,GACA,GAAE,CAACL,IAENM,QAAQC,IAAI,OAAQV,GAEbA,CACR,CDhBqBW,GAEpB,OACE,8BACGX,IACC,wBACGA,EAAYY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACvC,OACE,2BACE,gBACEC,IACED,EAAY,mCACoBA,GADpB,UAELE,GAETC,IAAKL,KAEP,wBAAKA,KACL,uCAAeC,OAVRF,EAaZ,OAKV,C,4ME3BKO,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAOlB,IAAMC,EAAqB,mCAAG,2FAC7BC,EAAWF,IAAAA,IAAA,sCAAyCD,IADvB,SAErBG,EAFqB,uCAEXf,KAAKgB,SAFM,2CAAH,qDAOrBC,EAAkB,mCAAG,WAAMC,GAAN,8EAC1BH,EAAWF,IAAAA,IAAA,gCACUD,EADV,wCACiDM,EADjD,yBADe,SAIlBH,EAJkB,uCAIRf,KAAKgB,SAJG,2CAAH,sDAWlBG,EAAmB,mCAAG,WAAMxB,GAAN,8EAC3BoB,EAAWF,IAAAA,IAAA,iBACLlB,EADK,oBACciB,EADd,oBADgB,SAInBG,EAJmB,uCAITf,MAJS,2CAAH,sDAUnBF,EAAc,mCAAG,WAAMH,GAAN,8EACtBoB,EAAWF,IAAAA,IAAA,iBACLlB,EADK,4BACsBiB,EADtB,oBADW,SAIdG,EAJc,uCAIJf,KAAKoB,MAJD,2CAAH,sDAUdC,EAAU,mCAAG,WAAM1B,GAAN,8EAClBoB,EAAWF,IAAAA,IAAA,iBACLlB,EADK,4BACsBiB,EADtB,2BADO,SAIVG,EAJU,uCAIAf,KAAKgB,SAJL,2CAAH,qD","sources":["components/Cast.jsx","hooks/useFetchCast.js","services/moviesApi.js"],"sourcesContent":["import { useFetchCast } from 'hooks/useFetchCast';\nimport noImage from '../image/no-image-min.png'\nconst Cast = () => {\n  const castDetails = useFetchCast();\n\n  return (\n    <>\n      {castDetails && (\n        <ul>\n          {castDetails.map(({ id, name, character, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://tmdb.org/t/p/w200${profile_path}`\n                      : `${noImage}`\n                  }\n                  alt={name}\n                />\n                <h3>{name}</h3>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastDetails } from 'services/moviesApi';\n\nexport const useFetchCast = () => {\n  const [castDetails, setCastDetails] = useState([]);\n  const { movieId } = useParams();\n\n    useEffect(() => {\n      \n    getCastDetails(movieId).then(data => {\n      console.log('data', data);\n      setCastDetails(data);\n    });\n    }, [movieId]);\n    \n  console.log('cast', castDetails);\n\n  return castDetails;\n};\n","import axios from 'axios';\n\nconst API_KEY = '74dab5764eb399e955b3b18efd4e4a86';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//  ------------------  1  ---------------------------\n//  - /trending/get-trending [список самых популярных фильмов] [на сегодня] для создания коллекции на главной странице.\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>> (https://developers.themoviedb.org/3/trending/get-trending -> Try it out -> movie)\n// Path Parameters: media_type, time_window - required\n// Query String: query - required\nexport const getListTrendingMovies = async () => {\n  const response = axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return (await response).data.results;\n};\n//  ------------------  2  ---------------------------\n//  - /search/search-movies [поиск кинофильма по ключевому слову] [на странице фильмов].\n// Query String: api_key, query - required\nexport const searchMovieKeyword = async query => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n  );\n  return (await response).data.results;\n};\n//  ------------------  3  ---------------------------\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//  - /movies/get-movie-details [запрос полной информации о фильме] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getFullDetailsMovie = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data;\n};\n//  ------------------  4  ---------------------------\n//  - /movies/get-movie-credits [запрос информации о актёрском составе] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getCastDetails = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data.cast;\n};\n//  ------------------  5  ---------------------------\n//  - /movies/get-movie-reviews [запрос обзоров] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getReviews = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return (await response).data.results;\n};\n\n//----------------------------------------\n// Дефолтні налаштування для запиту axios\n// axios.defaults.params = {\n//   key: API_KEY,\n//   language: 'en-US',\n//   page: 1,\n//   include_adult: false,\n// };\n//  ------------------  1  ---------------------------\n\n// export const getListTrendingMovies = async () => {\n//   const response = axios.get(`/trending/movie/day`);\n//   return (await response).data.results;\n// };\n//  ------------------  2  ---------------------------\n\n// export const searchMovieKeyword = async query => {\n//   const response = axios.get(`/search/movie?query=${query}`);\n//   return (await response).data.results;\n// };\n//  ------------------  3  ---------------------------\n// export const getFullDetailsMovie = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}`\n//   );\n//   return (await response).data;\n// };\n//  ------------------  4  ---------------------------\n// export const getCastDetails = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/credits`\n//   );\n//   return (await response).data.cast;\n// };\n//  ------------------  5  ---------------------------\n\n// export const getReviews = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/reviews`\n//   );\n//   return (await response).data.results;\n// };\n\n//  ------------------  1  ---------------------------\n"],"names":["castDetails","useState","setCastDetails","movieId","useParams","useEffect","getCastDetails","then","data","console","log","useFetchCast","map","id","name","character","profile_path","src","noImage","alt","API_KEY","axios","getListTrendingMovies","response","results","searchMovieKeyword","query","getFullDetailsMovie","cast","getReviews"],"sourceRoot":""}