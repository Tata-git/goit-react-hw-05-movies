{"version":3,"file":"static/js/221.ca3175af.chunk.js","mappings":"gOA6CA,UAzCe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAOMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBADa,mBAIMC,EAAAA,EAAAA,IAAmBL,GAJzB,OAIXM,EAJW,OAKjBC,QAAQC,IAAIF,GACZP,EAAUO,GANO,gDAQjBC,QAAQE,MAAM,sBAAuB,KAAMC,SAR1B,QAWnBT,EAAS,IAXU,yDAAH,sDAclB,OACE,iCACE,kBAAMU,SAAUT,EAAhB,WACE,kBACEU,KAAK,OACLC,YAAY,cACZC,MAAOd,EACPe,SAzBa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCb,EAASa,EACV,KAyBK,mBAAQF,KAAK,SAAb,uBAEDd,IAAU,SAAC,IAAD,CAAYmB,WAAYnB,MAIxC,C,wFCzCYoB,EAAa,SAAC,GAAoB,IAAlBD,EAAiB,EAAjBA,WACrBE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGH,IACC,wBACGA,EAAWI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA7C,SACGI,KAFID,EADK,OAWzB,C,4MCjBKK,EAAU,mCAShBC,IAAAA,SAAAA,QAAyB,+BAOlB,IAAMC,EAAqB,mCAAG,2FAC7BvB,EAAWsB,IAAAA,IAAA,sCAAyCD,IADvB,SAErBrB,EAFqB,uCAEXwB,KAAKC,SAFM,2CAAH,qDAarB1B,EAAkB,mCAAG,WAAML,GAAN,8EAC1BM,EAAWsB,IAAAA,IAAA,gCACUD,EADV,wCACiD3B,EADjD,yBADe,SAIlBM,EAJkB,uCAIRwB,KAAKC,SAJG,2CAAH,sDAkBlBC,EAAmB,mCAAG,WAAMC,GAAN,8EAC3B3B,EAAWsB,IAAAA,IAAA,iBACLK,EADK,oBACcN,EADd,oBADgB,SAInBrB,EAJmB,uCAITwB,MAJS,2CAAH,sDAkBnBI,EAAc,mCAAG,WAAMD,GAAN,8EACtB3B,EAAWsB,IAAAA,IAAA,iBACLK,EADK,4BACsBN,EADtB,oBADW,SAIdrB,EAJc,uCAIJwB,KAAKK,MAJD,2CAAH,sDAiBdC,EAAU,mCAAG,WAAMH,GAAN,8EAClB3B,EAAWsB,IAAAA,IAAA,iBACLK,EADK,4BACsBN,EADtB,2BADO,SAIVrB,EAJU,uCAIAwB,KAAKC,SAJL,2CAAH,qD","sources":["components/Movies.jsx","components/MoviesList.jsx","services/moviesApi.js"],"sourcesContent":["import { useState } from 'react';\nimport { searchMovieKeyword } from 'services/moviesApi';\nimport { MoviesList } from './MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n\n  const [query, setQuery] = useState('');\n\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await searchMovieKeyword(query);\n      console.log(response);\n      setMovies(response);\n    } catch (error) {\n      console.error('could not get data:', error.message);\n    }\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"enter query\"\n          value={query}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && <MoviesList moviesInfo={movies} />}\n\n    </>\n  );\n};\n\nexport default Movies;\n","import { NavLink, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ moviesInfo }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {moviesInfo && (\n        <ul>\n          {moviesInfo.map(({ id, title }) => (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\n\n","import axios from 'axios';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '74dab5764eb399e955b3b18efd4e4a86';\n// Дефолтні налаштування для запиту axios\n// axios.defaults.baseURL = BASE_URL;\n// axios.defaults.params = {\n//   key: API_KEY,\n//   language: 'en-US',\n//   page: 1,\n//   include_adult: false,\n// };\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//  ------------------  1  ---------------------------\n//  - /trending/get-trending [список самых популярных фильмов] [на сегодня] для создания коллекции на главной странице.\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>> (https://developers.themoviedb.org/3/trending/get-trending -> Try it out -> movie)\n// Path Parameters: media_type, time_window - required\n// Query String: query - required\nexport const getListTrendingMovies = async () => {\n  const response = axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return (await response).data.results;\n};\n\n// export const getListTrendingMovies = async () => {\n//   const response = axios.get(`/trending/movie/day`);\n//   return (await response).data.results;\n// };\n//  ------------------  2  ---------------------------\n\n//  - /search/search-movies [поиск кинофильма по ключевому слову] [на странице фильмов].\n// Query String: api_key, query - required\nexport const searchMovieKeyword = async query => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n  );\n  return (await response).data.results;\n};\n\n// export const searchMovieKeyword = async query => {\n//   const response = axios.get(\n//     `/search/movie?query=${query}`\n//   );\n//   return (await response).data.results;\n// };\n//  ------------------  3  ---------------------------\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//  - /movies/get-movie-details [запрос полной информации о фильме] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getFullDetailsMovie = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data;\n};\n\n// export const getFullDetailsMovie = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}`\n//   );\n//   return (await response).data;\n// };\n//  ------------------  4  ---------------------------\n\n//  - /movies/get-movie-credits [запрос информации о актёрском составе] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getCastDetails = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data.cast;\n};\n// export const getCastDetails = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/credits`\n//   );\n//   return (await response).data.cast;\n// };\n//  ------------------  5  ---------------------------\n\n//  - /movies/get-movie-reviews [запрос обзоров] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getReviews = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return (await response).data.results;\n};\n\n// export const getReviews = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/reviews`\n//   );\n//   return (await response).data.results;\n// };\n"],"names":["useState","movies","setMovies","query","setQuery","handleSubmit","event","preventDefault","searchMovieKeyword","response","console","log","error","message","onSubmit","type","placeholder","value","onChange","target","moviesInfo","MoviesList","location","useLocation","map","id","title","to","state","from","API_KEY","axios","getListTrendingMovies","data","results","getFullDetailsMovie","movieId","getCastDetails","cast","getReviews"],"sourceRoot":""}