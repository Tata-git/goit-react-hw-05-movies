{"version":3,"file":"static/js/632.00f9ec23.chunk.js","mappings":"sNAEaA,E,QAAUC,GAAAA,GAAH,2S,SCAPC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAO,SAACH,EAAD,UAAUG,GAClB,E,oBCmBD,EAlBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YAGRC,EAAAA,EAAAA,MAAwBC,KAAKH,EAC9B,GAAE,KAGD,iCACE,SAACJ,EAAD,6BAECG,IAAU,SAACK,EAAA,EAAD,CAAYC,WAAYN,MAGxC,C,uFCnBYK,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAI,wBAAyBH,IAGnC,8BACGD,IACC,wBACGA,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,SACGM,KAFID,EADK,OAWzB,C,4MCnBKK,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAOlB,IAAMf,EAAqB,mCAAG,2FAC7BgB,EAAWD,IAAAA,IAAA,sCAAyCD,IADvB,SAErBE,EAFqB,uCAEXC,KAAKC,SAFM,2CAAH,qDAOrBC,EAAkB,mCAAG,WAAMC,GAAN,8EAC1BJ,EAAWD,IAAAA,IAAA,gCACUD,EADV,wCACiDM,EADjD,yBADe,SAIlBJ,EAJkB,uCAIRC,KAAKC,SAJG,2CAAH,sDAWlBG,EAAmB,mCAAG,WAAMC,GAAN,8EAC3BN,EAAWD,IAAAA,IAAA,iBACLO,EADK,oBACcR,EADd,oBADgB,SAInBE,EAJmB,uCAITC,MAJS,2CAAH,sDAUnBM,EAAc,mCAAG,WAAMD,GAAN,8EACtBN,EAAWD,IAAAA,IAAA,iBACLO,EADK,4BACsBR,EADtB,oBADW,SAIdE,EAJc,uCAIJC,KAAKO,MAJD,2CAAH,sDAUdC,EAAU,mCAAG,WAAMH,GAAN,8EAClBN,EAAWD,IAAAA,IAAA,iBACLO,EADK,4BACsBR,EADtB,2BADO,SAIVE,EAJU,uCAIAC,KAAKC,SAJL,2CAAH,qD","sources":["frame/PageHeading/PageHeading.styled.js","frame/PageHeading/PageHeading.jsx","components/Home.jsx","components/MoviesList.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  padding: 8px;\n  margin-top: 0;\n  border-radius: 8px;\n  color: #fff;\n  font-size: 40px;\n  font-weight: 500;\n  text-align: center;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;\n","import { Heading } from './PageHeading.styled';\n\nexport const PageHeading = ({ children }) => {\n  return <Heading>{children}</Heading>;\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { PageHeading } from 'frame/PageHeading/PageHeading';\nimport { getListTrendingMovies } from '../services/moviesApi';\nimport { MoviesList } from './MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    // getListTrendingMovies().then(console.log);\n\n    getListTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading>Trending today</PageHeading>\n\n      {movies && <MoviesList moviesInfo={movies}  />}\n    </>\n  );\n};\n\nexport default Home;\n//\n\n//--------    getListTrendingMovies().then(console.log);   ------------------------------\n//   0:\n// adult: false\n// backdrop_path: \"/qATVdZdqtKUpO4D78wNCejsfp5S.jpg\"\n// genre_ids: (2) [18, 10749]\n// id: 829560\n// media_type: \"movie\"\n// original_language: \"pl\"\n// original_title: \"Kolejne 365 dni\"\n// overview: \"Laura and Massimo's relationship hangs in the balance as they try to overcome trust issues while a tenacious Nacho works to push them apart.\"\n// popularity: 655.33\n// poster_path: \"/6FsGeIp7heHm5eh4tIxTzHIRxmt.jpg\"\n// release_date: \"2022-08-19\"\n// title: \"The Next 365 Days\"\n// video: false\n// vote_average: 7.623\n// vote_count: 77\n","import { Link, useLocation } from 'react-router-dom'; //\n\nexport const MoviesList = ({ moviesInfo }) => {\n  const location = useLocation();\n  console.log('movieList - location ', location);\n  \n  return (\n    <>\n      {moviesInfo && (\n        <ul>\n          {moviesInfo.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '74dab5764eb399e955b3b18efd4e4a86';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//  ------------------  1  ---------------------------\n//  - /trending/get-trending [список самых популярных фильмов] [на сегодня] для создания коллекции на главной странице.\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>> (https://developers.themoviedb.org/3/trending/get-trending -> Try it out -> movie)\n// Path Parameters: media_type, time_window - required\n// Query String: query - required\nexport const getListTrendingMovies = async () => {\n  const response = axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return (await response).data.results;\n};\n//  ------------------  2  ---------------------------\n//  - /search/search-movies [поиск кинофильма по ключевому слову] [на странице фильмов].\n// Query String: api_key, query - required\nexport const searchMovieKeyword = async query => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n  );\n  return (await response).data.results;\n};\n//  ------------------  3  ---------------------------\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//  - /movies/get-movie-details [запрос полной информации о фильме] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getFullDetailsMovie = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data;\n};\n//  ------------------  4  ---------------------------\n//  - /movies/get-movie-credits [запрос информации о актёрском составе] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getCastDetails = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data.cast;\n};\n//  ------------------  5  ---------------------------\n//  - /movies/get-movie-reviews [запрос обзоров] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getReviews = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return (await response).data.results;\n};\n\n//----------------------------------------\n// Дефолтні налаштування для запиту axios\n// axios.defaults.params = {\n//   key: API_KEY,\n//   language: 'en-US',\n//   page: 1,\n//   include_adult: false,\n// };\n//  ------------------  1  ---------------------------\n\n// export const getListTrendingMovies = async () => {\n//   const response = axios.get(`/trending/movie/day`);\n//   return (await response).data.results;\n// };\n//  ------------------  2  ---------------------------\n\n// export const searchMovieKeyword = async query => {\n//   const response = axios.get(`/search/movie?query=${query}`);\n//   return (await response).data.results;\n// };\n//  ------------------  3  ---------------------------\n// export const getFullDetailsMovie = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}`\n//   );\n//   return (await response).data;\n// };\n//  ------------------  4  ---------------------------\n// export const getCastDetails = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/credits`\n//   );\n//   return (await response).data.cast;\n// };\n//  ------------------  5  ---------------------------\n\n// export const getReviews = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/reviews`\n//   );\n//   return (await response).data.results;\n// };\n\n//  ------------------  1  ---------------------------\n"],"names":["Heading","styled","PageHeading","children","useState","movies","setMovies","useEffect","getListTrendingMovies","then","MoviesList","moviesInfo","location","useLocation","console","log","map","id","title","to","state","from","API_KEY","axios","response","data","results","searchMovieKeyword","query","getFullDetailsMovie","movieId","getCastDetails","cast","getReviews"],"sourceRoot":""}