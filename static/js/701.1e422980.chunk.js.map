{"version":3,"file":"static/js/701.1e422980.chunk.js","mappings":"yOAsBA,EApBgB,WACd,IAAMA,ECCuB,WAC7B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,MAAK,SAAAC,GACvBC,QAAQC,IAAI,OAAQF,GACpBN,EAAWM,EACZ,GACF,GAAE,CAACL,IAEGH,CACR,CDbiBW,GAEhB,OACE,8BACGX,GACC,wBACGA,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,OAEA,qEAGV,C,4MEnBKG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAOlB,IAAMC,EAAqB,mCAAG,2FAC7BC,EAAWF,IAAAA,IAAA,sCAAyCD,IADvB,SAErBG,EAFqB,uCAEXX,KAAKY,SAFM,2CAAH,qDAOrBC,EAAkB,mCAAG,WAAMC,GAAN,8EAC1BH,EAAWF,IAAAA,IAAA,gCACUD,EADV,wCACiDM,EADjD,yBADe,SAIlBH,EAJkB,uCAIRX,KAAKY,SAJG,2CAAH,sDAWlBG,EAAmB,mCAAG,WAAMpB,GAAN,8EAC3BgB,EAAWF,IAAAA,IAAA,iBACLd,EADK,oBACca,EADd,oBADgB,SAInBG,EAJmB,uCAITX,MAJS,2CAAH,sDAUnBgB,EAAc,mCAAG,WAAMrB,GAAN,8EACtBgB,EAAWF,IAAAA,IAAA,iBACLd,EADK,4BACsBa,EADtB,oBADW,SAIdG,EAJc,uCAIJX,KAAKiB,MAJD,2CAAH,sDAUdnB,EAAU,mCAAG,WAAMH,GAAN,8EAClBgB,EAAWF,IAAAA,IAAA,iBACLd,EADK,4BACsBa,EADtB,2BADO,SAIVG,EAJU,uCAIAX,KAAKY,SAJL,2CAAH,qD","sources":["components/Reviews.jsx","hooks/useFetchReviews.js","services/moviesApi.js"],"sourcesContent":["import { useFetchReviews } from 'hooks/useFetchReviews';\n\nconst Reviews = () => {\n  const reviews = useFetchReviews();\n\n  return (\n    <>\n      {reviews ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (<p>We don't have any reviews for this movie</p>)}\n    </>\n  );\n};\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/moviesApi';\n\nexport const useFetchReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(data => {\n      console.log('data', data);\n      setReviews(data);\n    });\n  }, [movieId]);\n\n  return reviews;\n};\n","import axios from 'axios';\n\nconst API_KEY = '74dab5764eb399e955b3b18efd4e4a86';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//  ------------------  1  ---------------------------\n//  - /trending/get-trending [список самых популярных фильмов] [на сегодня] для создания коллекции на главной странице.\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>> (https://developers.themoviedb.org/3/trending/get-trending -> Try it out -> movie)\n// Path Parameters: media_type, time_window - required\n// Query String: query - required\nexport const getListTrendingMovies = async () => {\n  const response = axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return (await response).data.results;\n};\n//  ------------------  2  ---------------------------\n//  - /search/search-movies [поиск кинофильма по ключевому слову] [на странице фильмов].\n// Query String: api_key, query - required\nexport const searchMovieKeyword = async query => {\n  const response = axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n  );\n  return (await response).data.results;\n};\n//  ------------------  3  ---------------------------\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n//  - /movies/get-movie-details [запрос полной информации о фильме] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getFullDetailsMovie = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data;\n};\n//  ------------------  4  ---------------------------\n//  - /movies/get-movie-credits [запрос информации о актёрском составе] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getCastDetails = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return (await response).data.cast;\n};\n//  ------------------  5  ---------------------------\n//  - /movies/get-movie-reviews [запрос обзоров] [для страницы кинофильма].\n// Path Parameters: movie_id - required\n// Query String: api_key - required\nexport const getReviews = async movieId => {\n  const response = axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return (await response).data.results;\n};\n\n//----------------------------------------\n// Дефолтні налаштування для запиту axios\n// axios.defaults.params = {\n//   key: API_KEY,\n//   language: 'en-US',\n//   page: 1,\n//   include_adult: false,\n// };\n//  ------------------  1  ---------------------------\n\n// export const getListTrendingMovies = async () => {\n//   const response = axios.get(`/trending/movie/day`);\n//   return (await response).data.results;\n// };\n//  ------------------  2  ---------------------------\n\n// export const searchMovieKeyword = async query => {\n//   const response = axios.get(`/search/movie?query=${query}`);\n//   return (await response).data.results;\n// };\n//  ------------------  3  ---------------------------\n// export const getFullDetailsMovie = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}`\n//   );\n//   return (await response).data;\n// };\n//  ------------------  4  ---------------------------\n// export const getCastDetails = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/credits`\n//   );\n//   return (await response).data.cast;\n// };\n//  ------------------  5  ---------------------------\n\n// export const getReviews = async movieId => {\n//   const response = axios.get(\n//     `/movie/${movieId}/reviews`\n//   );\n//   return (await response).data.results;\n// };\n\n//  ------------------  1  ---------------------------\n"],"names":["reviews","useState","setReviews","movieId","useParams","useEffect","getReviews","then","data","console","log","useFetchReviews","map","id","author","content","API_KEY","axios","getListTrendingMovies","response","results","searchMovieKeyword","query","getFullDetailsMovie","getCastDetails","cast"],"sourceRoot":""}